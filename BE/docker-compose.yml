# ./docker-compose.yml
version: '3.8'

services:
  strapi_backend:
    container_name: sportmgmt_strapi # Descriptive container name
    build:
      context: .   # Path to the backend folder containing Dockerfile
    image: strapi:latest
    env_file: .env
    environment:
      # Pass necessary environment variables to Strapi
      DATABASE_CLIENT: ${DATABASE_CLIENT:-postgres}
      DATABASE_HOST: strapiDB # Service name of the database container
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_NAME: ${DATABASE_NAME:-strapi}
      DATABASE_USERNAME: ${DATABASE_USERNAME:-strapi}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-strapi}
      DATABASE_SSL: ${DATABASE_SSL:-false}
      HOST: ${HOST:-0.0.0.0} # Make Strapi accessible from outside container
      PORT: ${PORT:-1337}
      APP_KEYS: ${APP_KEYS} # Generate and set these securely!
      API_TOKEN_SALT: ${API_TOKEN_SALT} # Generate and set these securely!
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET} # Generate and set these securely!
      JWT_SECRET: ${JWT_SECRET} # Generate and set these securely!
      # Add any other ENV vars Strapi needs
    volumes:
      - ./strapi/config:/opt/app/config
      - ./strapi/src:/opt/app/src
      - ./strapi/package.json:/opt/app/package.json
      - ./strapi/package-lock.json:/opt/app/package-lock.json
      - ./strapi/.env:/opt/app/.env
      - ./strapi/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337" # Map host port 1337 to container port 1337
    depends_on:
      strapiDB:
        condition: service_healthy
    networks:
      - sportmgmt_network

  strapiDB:
    container_name: sportmgmt_db
    image: postgres:14-alpine # Or your preferred database
    platform: linux/amd64 #for platform error on Apple M1 chips
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME:-strapi}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-strapi}
      POSTGRES_DB: ${DATABASE_NAME:-strapi}
    volumes:
      # Persist database data
      - strapi_data:/var/lib/postgresql/data/
    ports:
      # Optional: Expose DB port to host for direct access/debugging
      - "5432:5432" # Map host 5433 -> container 5432 to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U strapi"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - sportmgmt_network

volumes:
  strapi_data:
  strapi_uploads:

networks:
  sportmgmt_network:
    driver: bridge